name: Node Tester and Updater

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次
  push:
    branches:
      - main # 当 main 分支有新提交时触发

# 并发控制，避免多个工作流同时运行
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  test_nodes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 获取完整历史，方便 rebase
        lfs: true # 启用 Git LFS

    - name: Check disk space
      run: |
        df -h
        FREE_SPACE=$(df -B1 . | tail -1 | awk '{print $4}')
        if [ "$FREE_SPACE" -lt 5000000000 ]; then
          echo "错误: 磁盘空间不足（少于 5GB），退出。"
          exit 1
        fi

    - name: Clean working directory
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        rm -rf clash/*
        git rm -r --cached clash/* 2>/dev/null || true
        git add .
        git commit -m "清理工作目录" || echo "无变更需要提交"
        git push || {
          echo "错误: git push 失败，查看远程仓库状态："
          git status
          git log --oneline -n 5
          exit 1
        }

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Download Clash.Meta (Mihomo)
      run: |
        rm -rf clash
        mkdir -p clash
        MIHOMO_VERSION=$(curl -s "https://api.github.com/repos/MetaCubeX/mihomo/releases/latest" | grep -oP '"tag_name": "\K[^"]+')
        echo "使用 Mihomo 版本: $MIHOMO_VERSION"
        MIHOMO_URL="https://github.com/MetaCubeX/mihomo/releases/download/${MIHOMO_VERSION}/mihomo-linux-amd64-${MIHOMO_VERSION}.gz"
        wget -qO- "$MIHOMO_URL" | gzip -d > clash/clash
        chmod +x clash/clash
        # 验证 Clash 可执行文件
        if ! ./clash/clash -v > /dev/null; then
          echo "错误: Clash 可执行文件无效"
          ./clash/clash -v || true # 显示版本错误详情
          exit 1
        fi
      env:
        pythonLocation: /opt/hostedtoolcache/Python/3.13.5/x64
        PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib/pkgconfig
        Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
        Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
        Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.13.5/x64
        LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.13.5/x64/lib

    - name: Install dependencies
      run: |
        sudo apt-get update --quiet
        sudo apt-get install -y --quiet iputils-ping curl jq
        pip install --quiet pyyaml requests

    - name: Make scripts executable
      run: |
        chmod +x ./prefilter_nodes.sh
        chmod +x ./node_tester.sh
        chmod +x ./convert_nodes.py
        chmod +x ./test_clash_api.py

    - name: Run Prefilter Nodes Script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p data
        ./prefilter_nodes.sh
        # 提交预过滤结果
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        git add data/filtered_nodes.txt data/prefilter_nodes.log
        git commit -m "保存预过滤节点结果" || echo "无预过滤结果需要提交"
        git push || {
          echo "错误: git push 失败，查看远程仓库状态："
          git status
          git log --oneline -n 5
          exit 1
        }

    - name: Run Node Tester Script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ./node_tester.sh

    - name: Commit and push final results
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        echo "提交文件列表："
        ls -l data/all.txt data/clash_config.yaml data/previous_nodes.txt data/clash.log data/convert_nodes.log data/test_clash_api.log data/passed_nodes.json data/parsed_nodes.json data/prefilter_nodes.log data/clash_config_batch_*.yaml 2>/dev/null || echo "部分文件不存在"
        git add --ignore-errors data/all.txt data/clash_config.yaml data/previous_nodes.txt data/clash.log data/convert_nodes.log data/test_clash_api.log data/passed_nodes.json data/parsed_nodes.json data/prefilter_nodes.log
        # 仅添加存在的批次配置文件
        for file in data/clash_config_batch_*.yaml; do
          [ -f "$file" ] && git add "$file"
        done
        git commit -m "更新测试节点结果" || echo "无变更需要提交"
        git push || {
          echo "错误: git push 失败，查看远程仓库状态："
          git status
          git log --oneline -n 5
          exit 1
        }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
