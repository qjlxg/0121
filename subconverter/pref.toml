version = 1
[common]
# API mode, set to true to prevent loading local subscriptions or serving local files directly
api_mode = false

# Access token used for performing critical action through Web interface
api_access_token = "password"

# Default URLs, used when no URL is provided in request, use "|" to separate multiple subscription links, supports local files/URL
default_url = []

# Insert subscription links to requests. Can be used to add node(s) to all exported subscriptions.
enable_insert = true
# URLs to insert before subscription links, can be used to add node(s) to all exported subscriptions, supports local files/URL
insert_url = [""]
# Prepend inserted URLs to subscription links. Nodes in insert_url will be added to groups first with non-group-specific match pattern.
prepend_insert_url = true

# Exclude nodes which remarks match the following patterns. Supports regular expression.
exclude_remarks = ["(?i)(到期|流量|Expire|Traffic|时间|官网|引导页?|网(\\s+)?址|官址|地址|导航|平台|网站|域名|付费|优惠|折扣|刷新|获取|订阅|群|取消|禁|产品|余额|更新|回国|telegram|t.me|频道|电报|售后|反馈|工单|私聊|维护|升级|邮箱|关闭|耗尽|关机|停机|故障|宕机|调整|修复|解决|重新|拥挤|测试|公测|过年|test|测速|https?://|重置|剩余|特殊|⭕|1️⃣|购买|暂时|临时|下载|调试|检查|干扰|热度|公告|官方|推迟|阻断|采购|好用|福利|精品|商用|Prepaid|疫情|感染|下架|投诉|屏蔽|邀请|欢迎|机场|返利|推广|佣金|广告|破解|不同|店|YYDS|真香|关注|谢谢|大家|永久|浏览器|月付|打开|包月|套餐|以上|以下|通知|注册|活动|转换|保证|每天|分享|倒卖|搬运|苏小柠|王者荣耀|代练|去除|不合适|尽快|绑定|临时域名|禁止|登录|激活|账号|恢复|更换|搜索|失联|发布|失联|发布)"]

# Only include nodes which remarks match the following patterns. Supports regular expression.
#include_remarks = ["V3.*港"]

# Enable script support for filtering nodes
enable_filter = false
# Script used for filtering nodes. Supports inline script and script path. A "filter" function with 1 argument which is a node should be defined in the script.
# Example: Inline script: set value to content of script.
#          Script path: set value to "path:/path/to/script.js".
#filter_script = '''
#function filter(node) {
#    const info = JSON.parse(node.ProxyInfo);
#    if(info.EncryptMethod.includes('chacha20'))
#	    return true;
#    return false;
#}
#'''

# Setting an external config file as default when none is specified, supports local files/URL
# default_external_config = "config/example_external_config.toml"

# The file scope limit of the 'rule_base' options in external configs.
base_path = "base"

# Clash config base used by the generator, supports local files/URL
clash_rule_base = "base/all_base.tpl"

# Surge config base used by the generator, supports local files/URL
surge_rule_base = "base/all_base.tpl"

# Surfboard config base used by the generator, supports local files/URL
surfboard_rule_base = "base/all_base.tpl"

# Mellow config base used by the generator, supports local files/URL
mellow_rule_base = "base/all_base.tpl"

# Quantumult config base used by the generator, supports local files/URL
quan_rule_base = "base/all_base.tpl"

# Quantumult X config base used by the generator, supports local files/URL
quanx_rule_base = "base/all_base.tpl"

# Loon config base used by the generator, supports local files/URL
loon_rule_base = "base/all_base.tpl"

# Shadowsocks Android config base used by the generator, supports local files/URL
sssub_rule_base = "base/all_base.tpl"

# sing-box config base used by the generator, supports local files/URL
singbox_rule_base = "base/all_base.tpl"

# Proxy used to download rulesets or subscriptions, set to NONE or empty to disable it, set to SYSTEM to use system proxy.
# Accept cURL-supported proxies (http:// https:// socks4a:// socks5://)

proxy_config = "SYSTEM"
proxy_ruleset = "SYSTEM"
proxy_subscription = "NONE"

# Append a proxy type string ([SS] [SSR] [VMess]) to node remark.
append_proxy_type = false

# When requesting /sub, reload this config file first.
reload_conf_on_request = false

[[userinfo.stream_rule]]
# Rules to extract stream data from node
# Format: full_match_regex|new_format_regex
# where new_format_regex should be like "total=$1&left=$2&used=$3"
match = '^剩余流量：(.*?)\|总流量：(.*)$'
replace = 'total=$2&left=$1'

[[userinfo.stream_rule]]
match = '^剩余流量：(.*?) (.*)$'
replace = 'total=$1&left=$2'

[[userinfo.stream_rule]]
match = '^Bandwidth: (.*?)/(.*)$'
replace = 'used=$1&total=$2'

[[userinfo.stream_rule]]
match = '^.*剩余(.*?)(?:\s*?)@(?:.*)$'
replace = 'total=$1'

[[userinfo.time_rule]]
# Rules to extract expire time data from node
# Format: full_match_regex|new_format_regex
# where new_format_regex should follow this example: yyyy:mm:dd:hh:mm:ss
match = '^过期时间：(\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)$'
replace = '$1:$2:$3:$4:$5:$6'

[[userinfo.time_rule]]
match = '^到期时间:(\d+)-(\d+)-(\d+)$'
replace = '$1:$2:$3:0:0:0'

[[userinfo.time_rule]]
match = '^Smart Access expire: (\d+)/(\d+)/(\d+)$'
replace = '$1:$2:$3:0:0:0'

[node_pref]
#udp_flag = true
#tcp_fast_open_flag = false
#skip_cert_verify_flag = true
#tls13_flag = false

sort_flag = false
# Script used for sorting nodes. A "compare" function with 2 arguments which are the 2 nodes to be compared should be defined in the script. Supports inline script and script path.
# Examples can be seen at the filter_script option in [common] section.
#sort_script = '''
#function compare(node_a, node_b) {
#   return info_a.Remark > info_b.Remark;
#}
#'''

filter_deprecated_nodes = false
append_sub_userinfo = true
clash_use_new_field_name = true

# Generate style of the proxies section of Clash subscriptions.
# Supported styles: block, flow, compact
# Block: - name: name1    Flow: - {name: name1, key: value}    Compact: [{name: name1, key: value},{name: name2, key: value}]
#         key: value           - {name: name2, key: value}
#       - name: name2
#         key: value
clash_proxies_style = "flow"

# add Clash mode to sing-box rules, and add a GLOBAL group to end of outbounds
singbox_add_clash_modes = true

[[node_pref.rename_node]]
match = "(解锁|)(\\|)(x.*)(\\|V2ray)"
replace = "$[$3]"

[[node_pref.rename_node]]
match = "(..|...)([0-9][0-9][0-9][0-9]|[0-9][0-9][0-9])(\\|)(Azure|HKT|CN2GIA)"
replace = "$1$4$2"

[[node_pref.rename_node]]
match = "^CordCloud - "
replace = ""

[[node_pref.rename_node]]
match = "(标准)|(标准线路)|(线路)|(中转)|(直连)|(80端口)|(V[0-9]-)|(IEPL专线 )|(IPV6)"
replace = ""

[[node_pref.rename_node]]
match = "(.*)( )(.*[0-9])( \\| )(.*)"
replace = "$1$3$5"

[[node_pref.rename_node]]
match = "(流媒体)|(-M)|(原生IP)"
replace = "[M]"

[[node_pref.rename_node]]
match = "(.*)([0-9].*[0-9])(静态解锁|动态解锁|原生解锁|解锁|动态原生|静态原生|原生)"
replace = "$1$2[M]"

[[node_pref.rename_node]]
match = "(.*)(\b[0-9][0-9]\b)(静态解锁|动态解锁|原生解锁|解锁|动态原生|静态原生|原生)"
replace = "$1$2[M]"

[[node_pref.rename_node]]
match = "(.*)([0-9].*[0-9])(\\|[\\w].*[0-9])"
replace = "$1$2"

[[node_pref.rename_node]]
match = "((❖CN[0-9]❖)|^)(⓪|❶|❷|❸|❻)(TJ\\.|gR\\.|V2\\.|H2\\.|SS\\.)"
replace = ""

# [[node_pref.rename_node]]
# match = "^(.*)(HK(?!(B|T|G)))([\u4e00-\u9fa5])"
# replace = "香港 $3"

[[node_pref.rename_node]]
match = "^(.*)(HK(?!B|G|T))([\u4e00-\u9fa5].*)"
replace = "香港 $3"

[[node_pref.rename_node]]
match = "^(HKBN)(.*)"
replace = "香港HKBN $2"

[[node_pref.rename_node]]
match = "^(HKG)(.*)"
replace = "香港HKG $2"

[[node_pref.rename_node]]
match = "^(HKT)(.*)"
replace = "香港HKT $2"

[[node_pref.rename_node]]
match = "^(HGC)(.*)"
replace = "香港HGC $2"

[[node_pref.rename_node]]
match = "^(WTT)(.*)"
replace = "香港WTT $2"

[[node_pref.rename_node]]
match = "^(US)(.*)"
replace = "美国 $2"

[[node_pref.rename_node]]
match = "^(JP)(.*)"
replace = "日本 $2"

[[node_pref.rename_node]]
match = "^(TW)(.*)"
replace = "台湾 $2"

[[node_pref.rename_node]]
match = "^(SG)(.*)"
replace = "新加坡 $2"

[[node_pref.rename_node]]
match = "^(RU)(.*)"
replace = "俄罗斯 $2"

[[node_pref.rename_node]]
match = "^(TR)(.*)"
replace = "土耳其 $2"

[[node_pref.rename_node]]
match = "^(UK)(.*)"
replace = "英国 $2"

[[node_pref.rename_node]]
match = "^(KR)(.*)"
replace = "韩国 $2"

[[node_pref.rename_node]]
match = "^(FR)(.*)"
replace = "法国 $2"

[[node_pref.rename_node]]
match = "^(CA)(.*)"
replace = "加拿大 $2"

[[node_pref.rename_node]]
match = "^(CN)(.*)"
replace = "中国 $2"

[[node_pref.rename_node]]
match = "^(RO)(.*)"
replace = "罗马尼亚 $2"

[[node_pref.rename_node]]
match = "^(BR)(.*)"
replace = "巴西 $2"

[[node_pref.rename_node]]
match = "商宽"
replace = ""

[[node_pref.rename_node]]
match = "移动"
replace = "CM"

[[node_pref.rename_node]]
match = "电信"
replace = "CT"

[[node_pref.rename_node]]
match = "联通"
replace = "CU"

[[node_pref.rename_node]]
match = "深港专线"
replace = "深港"

[[node_pref.rename_node]]
match = "(转)"
replace = "▷"

[[node_pref.rename_node]]
match = "[0-9]组"
replace = ""

[[node_pref.rename_node]]
match = "(--)"
replace = ""

[[node_pref.rename_node]]
match = "(◆)"
replace = ""

[[node_pref.rename_node]]
match = "(\\[?\\[NF\\]|\\[NF\\*\\]|\\[BBC\\]|\\[abema\\]|\\[动画疯\\]|Netflix|動畫瘋|\\[Hulu\\]|\\[注册Netflix\\]|\\[HBO\\]|\\[TVB\\]|\\[D\\+\\]|\\[Yp\\]|Y2B P\\]|解锁流媒体|原生IP)"
replace = "[M]"

[[node_pref.rename_node]]
match = "\\[M\\].*\\[M\\]"
replace = "[M]"

[[node_pref.rename_node]]
match = "\\[CM\\]|\\[CU\\]|\\[BT\\/PT专用\\]|\\[荐\\]|\\[Beta\\]|\\[移动\\]|\\[联通\\]|\\[综合\\]|\\[备用\\]|\\[阿里云\\]|\\[测试\\]|\\[v6\\]|高速|100m限速|CDN加速|Game|PPCW|Sakura"
replace = ""

[[node_pref.rename_node]]
match = "\\[0\\.2\\]"
replace = "[x0.2]"

[[node_pref.rename_node]]
match = "\\[0\\.5\\]"
replace = "[x0.5]"

[[node_pref.rename_node]]
match = "\\[0\\.7\\]"
replace = "[x0.7]"

[[node_pref.rename_node]]
match = "\\[0\\.8\\]"
replace = "[x0.8]"

[[node_pref.rename_node]]
match = "\\[0\\.9\\]"
replace = "[x0.9]"

[[node_pref.rename_node]]
match = "(\\[1\\]|倍率1)"
replace = "[x1]"

[[node_pref.rename_node]]
match = "\\[1\\.2\\]"
replace = "[x1.2]"

[[node_pref.rename_node]]
match = "(\\[1\\.5\\])(-1.5x)"
replace = "[x1.5]"

[[node_pref.rename_node]]
match = "(\\[2\\])|(-2x)"
replace = "[x2]"

[[node_pref.rename_node]]
match = "(\\[3\\])|(-3x)"
replace = "[x3]"

[[node_pref.rename_node]]
match = "(\\[5\\]|倍率5)"
replace = "[x5]"

[[node_pref.rename_node]]
match = "\\[8\\]"
replace = "[x8]"

[[node_pref.rename_node]]
match = "\\[10\\]"
replace = "[x10]"

# [[node_pref.rename_node]]
# match = "(?!<=[\\]|\\)])$"
# replace = "[x1]"

[[node_pref.rename_node]]
match = "(.*)(\\[)(倍率:)(.*[0-9])(\\])"
replace = "$1[x$4]"

[[node_pref.rename_node]]
match = "(\\[x.*[0-9]\\])(.*)"
replace = "$2$1"

[[node_pref.rename_node]]
match = "(.*)( )(.*[0-9])(倍率)"
replace = "$1[x$3]"

[[node_pref.rename_node]]
match = "(.*)(\\|)(x.*[0-9])(倍率)"
replace = "$1[$3]"

[[node_pref.rename_node]]
match = "(.*)( )(x.*[0-9])"
replace = "$1[$3]"

[[node_pref.rename_node]]
match = "\\[\\]"
replace = ""

[[node_pref.rename_node]]
match = "\\(?((x|X)?(\\d+)(\\.?\\d+)?)((\\s?倍率?)|(x|X))\\)?"
replace = "[x$1]"
[managed_config]
# Append a '#!MANAGED-CONFIG' info to Surge configurations
write_managed_config = true

# Address prefix for MANAGED-CONFIG info, without the trailing "/".
managed_config_prefix = "http://127.0.0.1:25500"

# Managed config update interval in seconds, determine how long the config will be updated.
config_update_interval = 86400

# If config_update_strict is set to true, Surge will require a force update after the interval.
config_update_strict = false

# Device ID to be written to rewrite scripts for some version of Quantumult X 
quanx_device_id = ""

[surge_external_proxy]
#surge_ssr_path = "/usr/bin/ssr-local"
resolve_hostname = true

[emojis]
add_emoji = false
remove_old_emoji = true

[[emojis.emoji]]
#match = '(流量|时间|应急)'
#emoji = '🏳️‍🌈'
import = "snippets/emoji.toml"

# [[custom_groups]]
# name = "Auto"
# type = "url-test"
# rule = [".*"]
# url = "http://www.gstatic.com/generate_204"
# interval = 300
# tolerance = 150
# lazy = true

# [[custom_groups]]
# name = "Proxy"
# type = "select"
# rule = [".*", "[]DIRECT"]
# disable_udp = false

# [[custom_groups]]
# name = "LoadBalance"
# type = "load-balance"
# rule = [".*", "[]Proxy", "[]DIRECT"]
# interval = 100
# strategy = "consistent-hashing"
# url = "http://www.gstatic.com/generate_204"

[[custom_groups]]
import = "snippets/groups.toml"

[ruleset]
# Enable generating rules with rulesets
enabled = true

# Overwrite the existing rules in rule_base
overwrite_original_rules = false

# Perform a ruleset update on request
update_ruleset_on_request = false

# [[rulesets]]
# group = "Proxy"
# ruleset = "https://raw.bgithub.xyz/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list"
# type = "surge-ruleset"
# interval = 86400

[[rulesets]]
import = "snippets/rulesets.toml"

[template]
template_path = ""

[[template.globals]]
key = "clash.http_port"
value = "7890"

[[template.globals]]
key = "clash.socks_port"
value = "7891"

[[template.globals]]
key = "clash.allow_lan"
value = "true"

[[template.globals]]
key = "clash.log_level"
value = "info"

[[template.globals]]
key = "singbox.allow_lan"
value = "true"

[[template.globals]]
key = "singbox.mixed_port"
value = "2080"

[[aliases]]
uri = "/clash"
target = "/sub?target=clash"

[[aliases]]
uri = "/clashr"
target = "/sub?target=clashr"

[[aliases]]
uri = "/surge"
target = "/sub?target=surge"

[[aliases]]
uri = "/quan"
target = "/sub?target=quan"

[[aliases]]
uri = "/quanx"
target = "/sub?target=quanx"

[[aliases]]
uri = "/mellow"
target = "/sub?target=mellow"

[[aliases]]
uri = "/surfboard"
target = "/sub?target=surfboard"

[[aliases]]
uri = "/loon"
target = "/sub?target=loon"

[[aliases]]
uri = "/singbox"
target = "/sub?target=singbox"

[[aliases]]
uri = "/ss"
target = "/sub?target=ss"

[[aliases]]
uri = "/ssd"
target = "/sub?target=ssd"

[[aliases]]
uri = "/sssub"
target = "/sub?target=sssub"

[[aliases]]
uri = "/ssr"
target = "/sub?target=ssr"

[[aliases]]
uri = "/v2ray"
target = "/sub?target=v2ray"

[[aliases]]
uri = "/trojan"
target = "/sub?target=trojan"

[[aliases]]
uri = "/test"
target = "/render?path=templates/test.tpl"

#[[tasks]]
#name = "tick"
#cronexp = "0/10 * * * * ?"
#path = "tick.js"
#timeout = 3

[server]
listen = "0.0.0.0"
port = 25500
serve_file_root = "web"

[advanced]
log_level = "debug"
print_debug_info = true
max_pending_connections = 10240
max_concurrent_threads = 4
max_allowed_rulesets = 64
max_allowed_rules = 0
max_allowed_download_size = 0
enable_cache = true
cache_subscription = 60
cache_config = 300
cache_ruleset = 21600
script_clean_context = true
async_fetch_ruleset = false
skip_failed_links = true
